JWT: Json Web Token

Industry Standard for tokens (RFC 7519)

in jwt.io to check your token!!!
 
Self-contained and can contain:
  + Credentials (legitimatie bewijs)
  + Claims      (bewering)
  + Other information

  JWT are self contained tokens
  A single token can be used with multiple backends
  mobile friendly (no cookies required)
  Once a token is issued, there is no need to get data from the database

  1. Implementing
     See: ITokenService and TokenService;

     install
     System.IdentityModel.Tokens.Jwt

2. in Client Angular:
   search for localStorage.getItem('user')
   a. in account.service.ts:
      after login, set user in localStorage:
        login(model: any) {
          return this.http.post(this.baseUrl + 'account/login', model).pipe(
            map((response: User) => {
              const user = response;
              if (user) {
                localStorage.setItem('user', JSON.stringify(user));
                this.currentUserSource.next(user);
              }
            })
          )
        }      
   b. in _services/members.service.ts:

      const httpOptions = {
        headers: new HttpHeaders({
          Authorization: 'Bearer ' + JSON.parse(localStorage.getItem('user'))?.token
        })
      }
      ....
      getMembers() {
        return this.http.get<Member[]>(this.baseUrl + 'users', httpOptions);
      }

      getMember(username: string) {
        return this.http.get<Member>(this.baseUrl + 'users/' + username, httpOptions);
      }      

==> do it with interceptor!!!      
    _interceptor:
       jwt.interceptor.ts

       app.module.ts:
       provider: 
        --> register interceptor!!! Don't forget it!!!